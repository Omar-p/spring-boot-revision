name: CI - Build Backend

on:
  pull_request:
    branches: [ master ]
    paths:
      - 'backend/**'
env:
  DOCKER_REGISTRY_USERNAME: 'omar077'
  IMAGE_NAME: 'customers-api'
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.1
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: customer
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and run Unit/Integration test with Maven
        run: mvn -ntp -B clean verify

  push-docker-image:
    needs: build
    defaults:
      run:
        working-directory: backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'


      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Container image
        run:  mvn compile jib:build -Djib.to.image=${{ env.DOCKER_REGISTRY_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}


