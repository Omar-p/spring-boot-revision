name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-cd.yaml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
        postgres:
          image: postgres:15-alpine
          ports:
          - "5432:5432"
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: customer
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/backend/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and run Unit/Integration test with Maven
        working-directory: backend
        run: mvn -ntp -B clean verify

      - name: Build Docker image using jib plugin
        working-directory: backend
        run: mvn -ntp -B jib:build -Dimage=omar077/customers-api:${{ github.sha }}


      - name: update image id
        run: |
          sed -i -E 's_(omar077/customers-api:).*$_\1'"${{ github.sha }}"'_' docker-compose.yaml
          sed -i -E 's_(omar077/customers-api:).*$_\1'"${{ github.sha }}"'_' backend/Dockerrun.aws.json

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ github.run_number }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: backend/Dockerrun.aws.json

      - name: commit changes
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git add .
          git commit -m "update image tag in Dockerrun.aws.json and docker-compose.yaml"
          git push
